/**
 * This class is generated by jOOQ
 */
package com.duoduo.schema.tables;


import com.duoduo.schema.Duoduo;
import com.duoduo.schema.Keys;
import com.duoduo.schema.tables.records.ReceiveMessageRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReceiveMessage extends TableImpl<ReceiveMessageRecord> {

    private static final long serialVersionUID = -629686321;

    /**
     * The reference instance of <code>duoduo.receive_message</code>
     */
    public static final ReceiveMessage RECEIVE_MESSAGE = new ReceiveMessage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReceiveMessageRecord> getRecordType() {
        return ReceiveMessageRecord.class;
    }

    /**
     * The column <code>duoduo.receive_message.id</code>.
     */
    public final TableField<ReceiveMessageRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>duoduo.receive_message.receive_message_json</code>.
     */
    public final TableField<ReceiveMessageRecord, String> RECEIVE_MESSAGE_JSON = createField("receive_message_json", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>duoduo.receive_message.create_time</code>.
     */
    public final TableField<ReceiveMessageRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>duoduo.receive_message</code> table reference
     */
    public ReceiveMessage() {
        this("receive_message", null);
    }

    /**
     * Create an aliased <code>duoduo.receive_message</code> table reference
     */
    public ReceiveMessage(String alias) {
        this(alias, RECEIVE_MESSAGE);
    }

    private ReceiveMessage(String alias, Table<ReceiveMessageRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReceiveMessage(String alias, Table<ReceiveMessageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Duoduo.DUODUO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ReceiveMessageRecord, Long> getIdentity() {
        return Keys.IDENTITY_RECEIVE_MESSAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReceiveMessageRecord> getPrimaryKey() {
        return Keys.KEY_RECEIVE_MESSAGE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReceiveMessageRecord>> getKeys() {
        return Arrays.<UniqueKey<ReceiveMessageRecord>>asList(Keys.KEY_RECEIVE_MESSAGE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReceiveMessage as(String alias) {
        return new ReceiveMessage(alias, this);
    }

    /**
     * Rename this table
     */
    public ReceiveMessage rename(String name) {
        return new ReceiveMessage(name, null);
    }
}
